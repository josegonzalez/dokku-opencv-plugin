#!/bin/bash -e

# Check if name is specified
if [[ $1 == opencv:* ]]; then
    if [[ -z $2 ]]; then
        echo "You must specify an app name"
        exit 1
    else
        APP="$2"
        # Check if app exists with the same name
        if [[ -d "$DOKKU_ROOT/$APP" ]]; then
            APP_EXISTS=true
        else
	        echo "The specified app does not exist"
	        exit 1
        fi
    fi
fi

#see http://docs.opencv.org/trunk/doc/tutorials/introduction/linux_install/linux_install.html
INSTALL_COMMAND=$(cat <<EOF
apt-get update
apt-get install -y -q wget curl
apt-get install -y -q build-essential
apt-get install -y -q cmake
curl -L 'http://sourceforge.net/projects/opencvlibrary/files/opencv-unix/2.4.7/opencv-2.4.7.tar.gz/' | tar xvzf -
mkdir -p opencv-2.4.7/release
cd opencv-2.4.7/release
cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local ..
make && make install
cd /
rm -rf opencv-2.4.7
EOF
)

case "$1" in

  opencv:install)

	APP="$2"
	IMAGE="app/$APP"

	echo "-----> Injecting OpenCV in $APP"

	id=$(docker run -d $IMAGE /bin/bash -e -c "$INSTALL_COMMAND")
	#enable logs
	docker attach $id
	test $(docker wait $id) -eq 0
	docker commit $id $IMAGE > /dev/null
    ;;

esac